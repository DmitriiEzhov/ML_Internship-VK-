# -*- coding: utf-8 -*-
"""test_document_processor

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kZ3pdbkpHVgXm8Ir9d-syuxNKND5RQAk
"""

import unittest
from document_processor import Document, Processor

class TestDocumentProcessor(unittest.TestCase):

    def setUp(self):
        self.processor = Processor()

    def test_single_document(self):
        # Тест с одним документом
        documents = [Document(Url="1", PubDate=2, FetchTime=3, Text="Initial Text")]
        result = self.processor.Process(documents)
        self.assertEqual(result.Url, "1")
        self.assertEqual(result.PubDate, 3)
        self.assertEqual(result.FetchTime, 3)
        self.assertEqual(result.Text, "Initial Text")
        self.assertEqual(result.FirstFetchTime, 3)

    def test_multiple_documents(self):
        # Тест с несколькими документами
        documents = [
            Document(Url="1", PubDate=2, FetchTime=3, Text="Initial Text 1"),
            Document(Url="1", PubDate=2, FetchTime=5, Text="Updated Text"),
            Document(Url="1", PubDate=2, FetchTime=1, Text="Old Text")
        ]
        result = self.processor.Process(documents)
        self.assertEqual(result.Url, "1")
        self.assertEqual(result.PubDate, 1)
        self.assertEqual(result.FetchTime, 5)
        self.assertEqual(result.Text, "Updated Text")
        self.assertEqual(result.FirstFetchTime, 1)

    def test_empty_documents(self):
        # Тест с пустым списком документов
        documents = []
        result = self.processor.Process(documents)
        self.assertIsNone(result)

    def test_documents_with_same_fetch_time(self):
        # Тест с документами, имеющими одинаковый FetchTime
        documents = [
            Document(Url="1", PubDate=2, FetchTime=3, Text="Text 1"),
            Document(Url="1", PubDate=2, FetchTime=3, Text="Text 2")
        ]
        result = self.processor.Process(documents)
        self.assertEqual(result.Url, "1")
        self.assertEqual(result.PubDate, 3)
        self.assertEqual(result.FetchTime, 3)
        self.assertEqual(result.Text, "Text 1")  # Должен выбрать первый документ с одинаковым FetchTime
        self.assertEqual(result.FirstFetchTime, 3)

    def test_documents_with_different_urls(self):
        # Тест с документами, имеющими разные Url (хотя по условиям задачи Url должен совпадать)
        documents = [
            Document(Url="1", PubDate=2, FetchTime=3, Text="Text 1"),
            Document(Url="2", PubDate=4, FetchTime=5, Text="Text 2")
        ]
        result = self.processor.Process(documents)
        self.assertEqual(result.Url, "1")
        self.assertEqual(result.PubDate, 3)
        self.assertEqual(result.FetchTime, 3)
        self.assertEqual(result.Text, "Text 1")
        self.assertEqual(result.FirstFetchTime, 3)


if __name__ == "__main__":
    # Запуск тестов
    unittest.main()